version: '3.8'

services:
  ruckus-exporter:
    build: .
    container_name: ruckus-ap-exporter
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      # Single AP (backwards compatible)
      # - RUCKUS_AP_HOST=192.168.1.100
      # Multiple APs (comma-separated) - replace with your actual APs
      - RUCKUS_AP_HOSTS=192.168.1.100,192.168.1.101
      - SNMP_COMMUNITY=public
      - SNMP_PORT=161
      - METRICS_PORT=8000
      - SCRAPE_INTERVAL=30
    networks:
      - monitoring
    # Multi-platform support: automatically detects host architecture

  # Optional: Include Prometheus for testing
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - monitoring

  # Optional: Include Grafana for visualization  
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - monitoring

networks:
  monitoring:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data: